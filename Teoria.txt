TECNOLOGIE USATE: Vite, Typescript, Tailwind, Router, React Form(folder features), Context API

INSTALLARE REACT IN TYPESCRIPT

1: Andare nella cartella dove voglio creare il progetto e da terminal:

2: npm create vite@latest

3: npm i

4: npm run dev


PIANIFICARE IL PROGETTO

1) Progettare la struttura quindi creare una lista di features e requirements 

2) Creazione della struttura delle cartelle 

a: Creazione delle features categories folder in base alla struttura creata qui sopra.Quindi creo una cartella features dentro src dove a sua volta creo tante cartelle quante sono le categorie che voglio implementare, in tali cartelle pongo tutti i componenti e custom hook relativi a quella categoria 

b: In base alle feature categories decidiamo quali pagine creare e quindi in src creiamo una cartella "pages" con i files relativi a ogni pagina

c: Creare in src una cartella "ui" con tutti i componenti che non sono ne pagine e che non fanno parte delle features categorie

d: Sempre dentro src creiamo una cartella "services" dove poniamo tutto il codice riutilizzabile che interagisce con la web API

e: Poi sempre in src creiamo una cartella "utils" dove poniamo le helper function che sono codice riutilizzabile in tutto il codice, ma a differenza di quelle in services tali devono essere stateless function quindi senza side effects

f: Poi sempre in src creo una cartella "context" per i context API

g: in src creo una cartela "hooks" per i custom hook che non fanno parte di nessuna feature categorie

d: in src una cartella "styles" per gli styles se serve

3) pianificare in quali componenti rompere l'user interface, quindi quali componenti creare, IMPORTANTE, rendere un componente riutilizzabile in altri progetti

4) costruire prima una versione senza state, quindi implementare la parte grafica

5) Poi pianifichiamo lo state managment e quindi classifichiamo quali tipi di state ci serveono e dove posizionarli

6) L'ultima fase é di decide quale tecnologie utilizzare in base agli state che utilizziamo e come impostiamo l'applicazione come ad esempio routing, tailwind, React Query ecc...


TECNOLOGIE DA UTILIZZARE IN BASE AGLI STATE 

1) Per gli UI state quindi state che non vengono fecciati da librerie estendere

  a) se local state: useState, useReducer, useRef
  b) se global state: Context API + useState/useReducer, Redux, React Router, Zustand, Recoil

2) Per i Remote state quindi tutti quegli state fecciati da librerie estendere

  a) se local state: fetch + useEffect + useState/useReducer
  b) se global state: Context API + useState/useReducer, React Query, SWR, RTK Quesry  altri possono essere Redux, React Router, Zustand, Recoil


CAMBIARE ICONA E TITOLO

Per cambiare l'icona andare su index.html e su:

<link rel="icon" type="image/svg+xml" href="/mail.png" /> 

modificare l'href, l'immagine in un progetto vite é salvata nella cartella public.

Per modificare il titolo sempre nel file index.html modificare l'inner HTML dell'elemento title


DEPLOY VITE PROJECT TO GITHUB

Vai al sito: https://vitejs.dev/guide/static-deploy